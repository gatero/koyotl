package profile

import (
	"encoding/json"
	"net/http"

	"github.com/gin-gonic/gin"
	bson "gopkg.in/mgo.v2/bson"
)

// Find method get all the user instances
// that exist into the database
// TODO: Filter the results through a query
func Find(query bson.M) ([]Profile, error) {
	// get the collection pointer
	c, _ := Collection()
	// declare and empty array
	var p []Profile
	// try to find all the profiles
	// and store them into the profiles slice
	fmt.Printf("\n\n QUERY: %#v\n\n", query)
	if e := c.Find(query).All(&p); e != nil {
		// if an error is ocurred then the
		// return the corresponding error
		return nil, e
	}
	return p, nil
}

// RH_Find is the route HandlerFunc for find
func RH_Find(c *gin.Context) {
	var form Profile
	c.BindJSON(&form)
	// try to find all the profiles
	// and store them into the profiles slice
	f, _ := json.Marshal(form)
	q := string(f)
	p, e := Find(bson.M{"$set": q})

	if e != nil {
		// if an error is ocurred then the
		// return the corresponding error
		c.String(http.StatusInternalServerError, e.Error())
	}
	// return the query results
	c.JSON(http.StatusOK, p)
}
